{
  "number_of_shards": 1
}





{
  "@timestamp": {
    "type": "date"
  },
  "latitude": {
    "type": "double"
  },
  "longitude": {
    "type": "double"
  },
  "time": {
    "type": "date",
    "format": "yyyy-MM-dd HH:mm:ss"
  }
}






{
  "description": "Ingest pipeline created by file structure finder",
  "processors": [
    {
      "date": {
        "field": "time",
        "timezone": "{{ beat.timezone }}",
        "formats": [
          "yyyy-MM-dd HH:mm:ss"
        ]
      }
    }
  ]
}


=TEXT(RAND()*("2020-04-04 12:00:00"-"2020-03-31 09:00:00")+"2020-03-31 09:00:00","yyyy-mm-dd h:m:s")


GET vehicle/_search
{
    "query": {
        "range" : {
            "time" : {
                "time_zone": "+00:00",        
                "gte": "2020-03-31 09:00:00", 
                "lte": "now"                
            }
        }
    }
}


INSERT INTO vehicle2 (latitude, longitude, time, geom) VALUES(10.75012779, 106.6760635, (to_timestamp('2020-04-01 21:38:45', 'yyyy-mm-dd hh24:mi:ss')),ST_GeomFromText('POINT(10.75012779 106.6760635)', 4326));


// pgClient.query('SELECT vnm_3.gid, count(vehicle.geom) AS totale FROM vnm_3 LEFT JOIN vehicle ON st_contains(vnm_3.geom, vehicle.geom) GROUP BY vnm_3.gid;', (err, res) => {
//   console.log(err, res)
//   pgClient.end()
// })
// pgClient.query("SELECT EXISTS (SELECT FROM pg_tables  WHERE  schemaname = 'public' AND tablename  = 'vehicle2');", (err, res) => {
//   console.log(res)
//   pgClient.end()
// })





  // var CronJob = require('cron').CronJob;
  // var job = new CronJob('* * * * * *', function() {
  //   console.log('You will see this message every second');
  // }, null, true, 'America/Los_Angeles');
  // job.start();